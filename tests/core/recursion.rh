void put_array(int arr, int i, int len) {
    put(*(arr - 8 * i));
    if (i != len - 1) {
        //pot(i + 1);
        put_array(arr, i + 1, len);
    }
}

// arr: array
// i: iterator (start at 0 for whole array)
// n: increment number
// len: length of array
void increment_array(int arr, int i, int n, int len) {
    arr[i] += 1;
    put(arr[i]);
    if (i != len - 1) {
        i += 1;
        increment_array(arr, i, n, len);
    }
}

// infinite loop if start > end
void basic_recursion_test(int i, int end) {
    put(i);
    if (i != end) {
        i += 1;
        basic_recursion_test(i, end);
    }
}

void put_ptr(int ptr) {
    put(*ptr);
}

void nested_call_test(int ptr, int ptr_two) {
    put_ptr(ptr);
    put_ptr(ptr_two);
}

int t = '6';
int o = '7';
int ptr = &t;
int ptr_two = &o;

int h = [3; '0', '1', '2'];
increment_array(h, 0, 1, 3);
put('\n');
basic_recursion_test('6', '8');
put('\n');
nested_call_test(ptr, ptr_two);
put('\n');
put('l');
